
RewriteEngine on
<IfModule mod_rewrite.c>
#RewriteCond %{HTTPS} !=on [OR]
#RewriteCond %{HTTP_HOST} ^kumar7\.com$ [NC]
#RewriteCond %{REQUEST_URI} !^/[0-9]+\..+\.cpaneldcv$
#RewriteCond %{REQUEST_URI} !^/\.well-known/pki-validation/[A-F0-9]{32}\.txt(?:\ Comodo\ DCV)?$
#RewriteRule ^.*$ https://www.kumar7.com%{REQUEST_URI} [R,L]
</IfModule>

<ifModule mod_headers.c>
    Header set Connection keep-alive
</ifModule>

<ifModule mod_headers.c>
    Header set Connection keep-alive
</ifModule>

RewriteCond %{REQUEST_URI} !^/[0-9]+\..+\.cpaneldcv$
RewriteCond %{REQUEST_URI} !^/\.well-known/pki-validation/[A-F0-9]{32}\.txt(?:\ Comodo\ DCV)?$
RewriteRule index$ index.php [NC,L]
RewriteCond %{REQUEST_URI} !^/[0-9]+\..+\.cpaneldcv$
RewriteCond %{REQUEST_URI} !^/\.well-known/pki-validation/[A-F0-9]{32}\.txt(?:\ Comodo\ DCV)?$
RewriteRule error-404$ error.php [NC,L]
RewriteCond %{REQUEST_URI} !^/[0-9]+\..+\.cpaneldcv$
RewriteCond %{REQUEST_URI} !^/\.well-known/pki-validation/[A-F0-9]{32}\.txt(?:\ Comodo\ DCV)?$
RewriteRule success$ page-success.php [NC,L]
RewriteCond %{REQUEST_URI} !^/[0-9]+\..+\.cpaneldcv$
RewriteCond %{REQUEST_URI} !^/\.well-known/pki-validation/[A-F0-9]{32}\.txt(?:\ Comodo\ DCV)?$
RewriteRule page-profile$ page-profile.php [NC,L]

RewriteCond %{REQUEST_URI} !^/[0-9]+\..+\.cpaneldcv$
RewriteCond %{REQUEST_URI} !^/\.well-known/pki-validation/[A-F0-9]{32}\.txt(?:\ Comodo\ DCV)?$
RewriteRule ^page-login$ page-login.php [NC,L]
RewriteCond %{REQUEST_URI} !^/[0-9]+\..+\.cpaneldcv$
RewriteCond %{REQUEST_URI} !^/\.well-known/pki-validation/[A-F0-9]{32}\.txt(?:\ Comodo\ DCV)?$
RewriteRule ^page-register$ page-register.php [NC,L]

RewriteCond %{REQUEST_URI} !^/[0-9]+\..+\.cpaneldcv$
RewriteCond %{REQUEST_URI} !^/\.well-known/pki-validation/[A-F0-9]{32}\.txt(?:\ Comodo\ DCV)?$
RewriteRule ^verify/([a-zA-Z0-9]+)/?$  page-verification.php?email_code=$1 [NC,L]

# C (chained with next rule)
# CO=cookie (set specified cookie)
# E=var:value (set environment variable var to value)
# F (forbidden - sends a 403 header to the user)
# G (gone - no longer exists)
# H=handler (set handler)
# L (last - stop processing rules)
# N (next - continue processing rules)
# NC (case insensitive)
# NE (do not escape special URL characters in output)
# NS (ignore this rule if the request is a subrequest)
# P (proxy - i.e., apache should grab the remote content specified in the substitution section and return it)
# PT (pass through - use when processing URLs with additional handlers, e.g., mod_alias)
# R (temporary redirect to new URL)
# R=301 (permanent redirect to new URL)
# QSA (append query string from request to substituted URL)
# S=x (skip next x rules)
# T=mime-type (force specified mime type)
